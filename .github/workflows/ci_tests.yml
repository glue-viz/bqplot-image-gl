name: CI Tests

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Install node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af  # v4.1.0
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5.3.0
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Build
        run: |
          hatch build

      - name: Upload builds
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b  # v4.5.0
        with:
          name: bqplot-image-gl-dist-${{ github.run_number }}
          path: ./dist

  visual-regression-tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
        with:
          name: bqplot-image-gl-dist-${{ github.run_number }}
          path: ./dist

      - name: Install Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5.3.0
        with:
          python-version: '3.x'

      - name: Install bqplot-image-gl and jupyterlab
        run: |
          echo $PWD
          ls -al .
          ls -al dist/
          pip install dist/bqplot_image_gl*.whl "pytest-ipywidgets[all]" "pytest-playwright==0.5.2"

      - name: Install playwright
        run: |
          playwright install chromium

      - name: Run visual regression tests
        run: |
          pytest tests/ui

      - name: Upload UI Test artifacts
        if: always()
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b  # v4.5.0
        with:
          name: bqplot-image-gl-ui-test-output
          path: |
            test-results

  tests:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@9f1f43251dde69da8613ea8e11144f05cdea41d5  # v1.15.0
    with:
      coverage: codecov

      envs: |
        # Code style
        - linux: codestyle
          coverage: false

        - linux: py38-test
        - linux: py313-test

        - macos: py37-test
          runs-on: macos-13
          # virtualenv (which tox uses) dropped support for making python 3.7 environments in 20.27.0
          toxdeps: virtualenv==20.26.6 hatchling
        - macos: py310-test
        - macos: py312-test

        - windows: py39-test
        - windows: py311-test

        - linux: py38-notebooks
          runs-on: ubuntu-22.04
        - macos: py37-notebooks
          runs-on: macos-13
          # virtualenv (which tox uses) dropped support for making python 3.7 environments in 20.27.0
          toxdeps: virtualenv==20.26.6 hatchling
        - windows: py39-notebooks

  release:
    needs: [tests, visual-regression-tests]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ipyreact-dist

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine wheel jupyter-packaging jupyterlab

      - name: Publish the Python package
        if: startsWith(github.event.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --skip-existing dist/*.whl dist/*.tar.gz

      - name: Publish the NPM package
        if: startsWith(github.event.ref, 'refs/tags/v')
        run: |
          echo $PRE_RELEASE
          if [[ $PRE_RELEASE == "true" ]]; then export TAG="next"; else export TAG="latest"; fi
          npm publish --tag ${TAG} --access public *.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          PRE_RELEASE: ${{ github.event.release.prerelease }}
